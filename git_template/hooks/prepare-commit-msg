#!/bin/sh
#
# Automatically adds branch name and branch description to every commit message.
#

##
# Installation on OSX:
# $ brew install aspell
#
# Then add Your custom word list to home folder
# The first line needs to be personal_ws-1.1 en 0
# $ nano ~/.aspell.en.pws
#
# For example:
#
# personal_ws-1.1 en 0
# git
# json
# wordpress
# Facebook
# vagrant
# vagrantfile
# ansible
##

function command_exists () {
  command -v "$1" >/dev/null 2>&1
}

##
# This script can be called from anywhere so it's good to be in the correct location
# This can also be called in .git/hooks dir and we need to get into project root
##
cd "$( dirname "${BASH_SOURCE[0]}" )"/../..

# No spell checking for merging or squashing
if [ -f .git/MERGE_MSG ]; then
   exit 0
elif [ -f .git/SQUASH_MSG ]; then
   exit 0
fi

# If aspell is installed spell check all my commits
if [ -z "$SKIP_CUSTOM_CHECKS" ] && command_exists aspell; then

    # Get commit message, Don't spellcheck Singed-off-by messages
    MESSAGE=$(cat $1 | grep -v "^Signed-off-by:")

    # Check if this is empty repo
    # If its not empty repo remove all git HASH messages
    git --no-pager log --decorate=short --pretty=oneline -n1 2>&1 >/dev/null | grep 'does not have any commits yet' > /dev/null
    if [ $? != 0 ]
    then
        # aspell has no idea of git hashes so remove them from spellchecking
        HASHES=$(git rev-list --all)
        while read -r line; do
            MESSAGE=$(echo $MESSAGE | sed "s/$line//g")
        done <<< "$HASHES"
    fi

  # Spell check commit message
  TYPOS=$(echo $MESSAGE | aspell list -d en_US)
  if [ -n "$TYPOS" ]; then
    echo "ERROR: spell check failed on words: \n$TYPOS"
    echo "Edit ~/.aspell.en.pws to accept more words"
    echo "Skip this: $ run-it-please"
    exit 1
  fi
fi

# Get commit message
commit_msg=$(cat "$1")

# I'm lazy. Please capitalize first letter if I forgot to
commit_msg_capitalize="$(tr '[:lower:]' '[:upper:]' <<< ${commit_msg:0:1})${commit_msg:1}"

echo "$commit_msg_capitalize" > "$1"
